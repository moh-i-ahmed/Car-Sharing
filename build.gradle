buildscript {
	ext {
		springBootVersion = "2.1.3.RELEASE"
	}
	repositories {
		mavenCentral()
      jcenter()
	}
	dependencies {
		classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
	}
}
/*
plugins {
  id "com.github.spotbugs" version "1.6.9"
} */

apply plugin: "java"
apply plugin: "org.springframework.boot"
apply plugin: "io.spring.dependency-management"
apply plugin: "jacoco"
apply plugin: "groovy"

// KEEP DISABLED
//apply plugin: "checkstyle"
apply plugin: "eclipse"
apply plugin: "idea"

version = "1.0"

sourceCompatibility = 1.8
targetCompatibility = 1.8

repositories {
	mavenCentral()
}

// tag::versions[]
ext {
   jasperVersion = '9.0.10'
   groovyVersion = '2.4.15'
   spockVersion = '1.1-groovy-2.4'
}

configurations {
   providedRuntime
    compile.exclude(group: 'ch.qos.logback')
}


dependencies {
	implementation "org.springframework.boot:spring-boot-starter-security"
	implementation "org.springframework.boot:spring-boot-starter-web"
	implementation "com.puppycrawl.tools:checkstyle:8.2"
   implementation "com.stripe:stripe-java:18.7.0"

	testImplementation "org.springframework.boot:spring-boot-starter-test"
	testImplementation "org.springframework.security:spring-security-test"
   testImplementation "org.codehaus.groovy:groovy-all:2.5.5"
   testImplementation "org.mockito:mockito-core:2.7.22"

	runtimeOnly "org.springframework.boot:spring-boot-devtools"
	runtimeOnly "mysql:mysql-connector-java"
	
   //Spock
   testCompile "junit:junit:4.12"
	testCompile("org.spockframework:spock-core:$spockVersion")
   testCompile "org.spockframework:spock-spring:$spockVersion"
   testCompile "org.codehaus.groovy:groovy-all:2.5.5"
   testCompile "org.hamcrest:hamcrest-core:1.3"
   testCompile "org.hamcrest:hamcrest-library:1.3"
   testCompile('com.athaydes:spock-reports:1.3.1') {
      transitive = false // this avoids affecting your version of Groovy/Spock
   }

   compile group: 'org.webjars', name: 'jquery', version: '3.3.1'
   compile "com.nulab-inc:zxcvbn:1.3.0"
   compile "org.slf4j:slf4j-api:1.7.25"
	compile "org.codehaus.groovy:groovy-all:2.5.5"
   compile "com.h2database:h2:1.4.197"
	compile "org.springframework.boot:spring-boot-starter-web"
   compile "org.springframework.boot:spring-boot-starter-data-jpa"
	compile "org.springframework.boot:spring-boot-starter-thymeleaf"
   compile "org.springframework.boot:spring-boot-starter-security"
   //Email 
   compile "it.ozimov:spring-boot-email-core:0.5.0"
   compile "it.ozimov:spring-boot-freemarker-email:0.6.3"
   compile "org.springframework.boot:spring-boot-starter-mail:2.2.1.RELEASE"
   compile "org.springframework:spring-context-support:4.0.1.RELEASE"
	compile 'jstl:jstl:1.2'
	compile "javax.persistence:javax.persistence-api:2.2"
   //Payment
   compile 'com.sparkjava:spark-core:2.3'
   compile 'com.twilio.sdk:twilio-java-sdk:4.4.5'
   compile 'org.projectlombok:lombok:1.18.12'

}


jacoco {
    toolVersion = "0.8.2"
    reportsDir = file("$buildDir/reports/jacoco")
}

jacocoTestReport {
    reports {
        xml.enabled false
        csv.enabled false
        html.destination file("${buildDir}/jacocoHtml")
    }
}
/*
 checkstyle {
      toolVersion "8.2"
      configFile file("config/checkstyle/checkstyle.xml")
}

 checkstyleMain {
      source ="src/main/java"
  }

 checkstyleTest {
     source ="src/test/java"
 }*/

bootJar {
    baseName = "Car-Sharing"
    version = "1.0"
}
/*
tasks.withType(com.github.spotbugs.SpotBugsTask) {
    reports {
      xml.enabled = false
      html.enabled = true
	}
}*/